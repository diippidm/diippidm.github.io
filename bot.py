import logging
import json
import aiosqlite

from aiogram import Bot, Dispatcher, types, F
from aiogram.enums.content_type import ContentType
from aiogram.filters import CommandStart
from aiogram.enums.parse_mode import ParseMode

logging.basicConfig(level=logging.INFO)

bot = Bot("7844429997:AAGxJw2wcBiR4ngCV6hTkSKQxL1qGv5449o")
dp = Dispatcher()

#@dp.message(CommandStart())
async def start(message: types.Message):
    photo_url = "https://www.upload.ee/image/17277134/photo1.jpg"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await add_user(message.from_user.id, message.from_user.username, message.from_user.first_name, message.from_user.last_name)
    
from aiogram import types
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    photo_url = 'https://www.upload.ee/image/17277134/photo1.jpg'  # –£–∫–∞–∂–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ", url='https://diippidm.github.io/'))

    await message.answer_photo(
        photo=photo_url,
        caption="–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n\n"
                "1. –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ üìö ‚Äî –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∏ —É—Ä–æ–∫–∏ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ç–µ–º–∞–º.\n"
                "2. –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ‚ùì ‚Äî –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫—É—Ä—Å–∞–º –∏–ª–∏ –æ–±—É—á–µ–Ω–∏—é, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å!\n"
                "3. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å üìà ‚Äî –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø—Ä–æ–¥–≤–∏–≥–∞–µ—Ç—Å—è –≤–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –∫–∞–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –µ—â–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å.\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ!",
        reply_markup=keyboard
    )

async def add_user(user_id, username, first_name, last_name):
    try:
        async with aiosqlite.connect('bot_database.db') as db:
            await db.execute('''
                INSERT OR IGNORE INTO users (id, username, first_name, last_name)
                VALUES (?, ?, ?, ?)
            ''', (user_id, username, first_name, last_name))
            await db.commit()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

@dp.message(F.content_type == ContentType.WEB_APP_DATA)
async def parse_data(message: types.Message):
    data = json.loads(message.web_app_data.data)
    await message.answer(f'<b>{data["title"]}</b>\n\n<code>{data["desc"]}</code>\n\n{data["text"]}', parse_mode=ParseMode.HTML)

async def setup_db():
    async with aiosqlite.connect('bot_database.db') as db:
        await db.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY,
                username TEXT,
                first_name TEXT,
                last_name TEXT
            )
        ''')
        await db.commit()

async def main():
    await setup_db()
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
